state 0 //

    0 $accept: . start

    TOKEN_BASHTYPE  shift, and goto state 8
    TOKEN_CRUDOP    shift, and goto state 6
    TOKEN_DOC       shift, and goto state 10
    TOKEN_EXIT      shift, and goto state 9

    B      goto state 7
    D      goto state 4
    K      goto state 2
    L      goto state 5
    Q      goto state 3
    start  goto state 1

state 1 // TOKEN_BASHTYPE [$end]

    0 $accept: start .  [$end]

    $end  accept

state 2 // TOKEN_CRUDOP TOKEN_ENTITY TOKEN_ATTR TOKEN_EQUAL TOKEN_WORD [$end]

    1 start: K .  [$end]

    $end  reduce using rule 1 (start)

state 3 // TOKEN_BASHTYPE [$end]

    2 start: Q .  [$end]

    $end  reduce using rule 2 (start)

state 4 // TOKEN_EXIT [$end]

    3 start: D .  [$end]

    $end  reduce using rule 3 (start)

state 5 // TOKEN_DOC [$end]

    4 start: L .  [$end]

    $end  reduce using rule 4 (start)

state 6 // TOKEN_CRUDOP

    5 K: TOKEN_CRUDOP . E
    6 K: TOKEN_CRUDOP . Z P F

    TOKEN_ENTITY  shift, and goto state 15

    E  goto state 13
    Z  goto state 14

state 7 // TOKEN_BASHTYPE [$end]

   14 Q: B .  [$end]

    $end  reduce using rule 14 (Q)

state 8 // TOKEN_BASHTYPE

   15 B: TOKEN_BASHTYPE . TOKEN_WORD TOKEN_CMDFLAG
   16 B: TOKEN_BASHTYPE . TOKEN_WORD
   17 B: TOKEN_BASHTYPE .  [$end]

    $end        reduce using rule 17 (B)
    TOKEN_WORD  shift, and goto state 11

state 9 // TOKEN_EXIT

   18 D: TOKEN_EXIT .  [$end]

    $end  reduce using rule 18 (D)

state 10 // TOKEN_DOC

   19 L: TOKEN_DOC .  [$end]

    $end  reduce using rule 19 (L)

state 11 // TOKEN_BASHTYPE TOKEN_WORD

   15 B: TOKEN_BASHTYPE TOKEN_WORD . TOKEN_CMDFLAG
   16 B: TOKEN_BASHTYPE TOKEN_WORD .  [$end]

    $end           reduce using rule 16 (B)
    TOKEN_CMDFLAG  shift, and goto state 12

state 12 // TOKEN_BASHTYPE TOKEN_WORD TOKEN_CMDFLAG

   15 B: TOKEN_BASHTYPE TOKEN_WORD TOKEN_CMDFLAG .  [$end]

    $end  reduce using rule 15 (B)

state 13 // TOKEN_CRUDOP TOKEN_ENTITY TOKEN_ATTR TOKEN_EQUAL TOKEN_WORD [$end]

    5 K: TOKEN_CRUDOP E .  [$end]

    $end  reduce using rule 5 (K)

state 14 // TOKEN_CRUDOP TOKEN_ENTITY [TOKEN_WORD]

    6 K: TOKEN_CRUDOP Z . P F

    TOKEN_WORD  shift, and goto state 23

    P  goto state 22

state 15 // TOKEN_CRUDOP TOKEN_ENTITY

    7 E: TOKEN_ENTITY . F
   11 Z: TOKEN_ENTITY .  [TOKEN_WORD]

    TOKEN_ATTR  shift, and goto state 17
    TOKEN_WORD  reduce using rule 11 (Z)

    F  goto state 16

state 16 // TOKEN_CRUDOP TOKEN_ENTITY TOKEN_ATTR TOKEN_EQUAL TOKEN_WORD [$end]

    7 E: TOKEN_ENTITY F .  [$end]

    $end  reduce using rule 7 (E)

state 17 // TOKEN_CRUDOP TOKEN_ENTITY TOKEN_ATTR

    8 F: TOKEN_ATTR . TOKEN_EQUAL TOKEN_WORD F
    9 F: TOKEN_ATTR . TOKEN_EQUAL TOKEN_WORD M

    TOKEN_EQUAL  shift, and goto state 18

state 18 // TOKEN_CRUDOP TOKEN_ENTITY TOKEN_ATTR TOKEN_EQUAL

    8 F: TOKEN_ATTR TOKEN_EQUAL . TOKEN_WORD F
    9 F: TOKEN_ATTR TOKEN_EQUAL . TOKEN_WORD M

    TOKEN_WORD  shift, and goto state 19

state 19 // TOKEN_CRUDOP TOKEN_ENTITY TOKEN_ATTR TOKEN_EQUAL TOKEN_WORD

    8 F: TOKEN_ATTR TOKEN_EQUAL TOKEN_WORD . F
    9 F: TOKEN_ATTR TOKEN_EQUAL TOKEN_WORD . M
   10 M: .  [$end]

    $end        reduce using rule 10 (M)
    TOKEN_ATTR  shift, and goto state 17

    F  goto state 20
    M  goto state 21

state 20 // TOKEN_CRUDOP TOKEN_ENTITY TOKEN_ATTR TOKEN_EQUAL TOKEN_WORD TOKEN_ATTR TOKEN_EQUAL TOKEN_WORD [$end]

    8 F: TOKEN_ATTR TOKEN_EQUAL TOKEN_WORD F .  [$end]

    $end  reduce using rule 8 (F)

state 21 // TOKEN_CRUDOP TOKEN_ENTITY TOKEN_ATTR TOKEN_EQUAL TOKEN_WORD [$end]

    9 F: TOKEN_ATTR TOKEN_EQUAL TOKEN_WORD M .  [$end]

    $end  reduce using rule 9 (F)

state 22 // TOKEN_CRUDOP TOKEN_ENTITY TOKEN_WORD [TOKEN_ATTR]

    6 K: TOKEN_CRUDOP Z P . F

    TOKEN_ATTR  shift, and goto state 17

    F  goto state 26

state 23 // TOKEN_CRUDOP TOKEN_ENTITY TOKEN_WORD

   12 P: TOKEN_WORD . TOKEN_SLASH P
   13 P: TOKEN_WORD .  [TOKEN_ATTR]

    TOKEN_ATTR   reduce using rule 13 (P)
    TOKEN_SLASH  shift, and goto state 24

state 24 // TOKEN_CRUDOP TOKEN_ENTITY TOKEN_WORD TOKEN_SLASH

   12 P: TOKEN_WORD TOKEN_SLASH . P

    TOKEN_WORD  shift, and goto state 23

    P  goto state 25

state 25 // TOKEN_CRUDOP TOKEN_ENTITY TOKEN_WORD TOKEN_SLASH TOKEN_WORD [TOKEN_ATTR]

   12 P: TOKEN_WORD TOKEN_SLASH P .  [TOKEN_ATTR]

    TOKEN_ATTR  reduce using rule 12 (P)

state 26 // TOKEN_CRUDOP TOKEN_ENTITY TOKEN_WORD TOKEN_ATTR TOKEN_EQUAL TOKEN_WORD [$end]

    6 K: TOKEN_CRUDOP Z P F .  [$end]

    $end  reduce using rule 6 (K)

