{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Testing Swagger spec. It's still in progress\n\nThe API may return incorrect response codes and have bugs.",
    "title": "Golang OGREE API",
    "contact": {
      "name": "Ziad Khalaf",
      "email": "ziad.khalaf@orness.com"
    },
    "version": "1.0"
  },
  "basePath": "/api/user",
  "paths": {
    "/api/tenants/{name}/all": {
      "get": {
        "description": "Returns JSON body with all subobjects under the Tenant",
        "produces": [
          "application/json"
        ],
        "tags": [
          "objects"
        ],
        "summary": "Obtain all objects related to Tenant in the system.",
        "operationId": "GetFromObject",
        "parameters": [
          {
            "type": "int",
            "default": 999,
            "description": "Name of Tenant",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          },
          "404": {
            "description": "Nothing Found"
          }
        }
      }
    },
    "/api/user": {
      "post": {
        "description": "Create an account with Email credentials, it returns\na JWT key to use with the API. The\nauthorize and 'Try it out' buttons don't work",
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Generate credentials for the API.",
        "operationId": "Create",
        "parameters": [
          {
            "type": "string",
            "default": "infiniti@nissan.com",
            "description": "Your Email Address",
            "name": "username",
            "in": "body",
            "required": true
          },
          {
            "format": "password",
            "default": "secret",
            "description": "Your password",
            "name": "password",
            "in": "json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Authenticated"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/{objs}": {
      "get": {
        "description": "Returns JSON body with all specified objects of type and their IDs",
        "produces": [
          "application/json"
        ],
        "tags": [
          "objects"
        ],
        "summary": "Gets all present objects for specified category in the system.",
        "operationId": "GetAllObjects",
        "parameters": [
          {
            "type": "string",
            "default": "sites",
            "description": "Indicates the object. Only values of \"tenants\", \"sites\", \"buildings\", \"rooms\", \"racks\", \"devices\", \"room-templates\", \"obj-templates\" are acceptable For rooms, walls, acs, panels, aisles, tiles, cabinets, groups, corridors, racksensors, and devicesensors can be obtained by appending /subobj type and subobj id",
            "name": "objs",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          },
          "404": {
            "description": "Nothing Found"
          }
        }
      }
    },
    "/api/{objs}/{id}": {
      "get": {
        "description": "The ID must be provided in the URL parameter\nThe name can be used instead of ID if the obj is tenant",
        "produces": [
          "application/json"
        ],
        "tags": [
          "objects"
        ],
        "summary": "Gets an Object from the system.",
        "operationId": "GetObject",
        "parameters": [
          {
            "type": "string",
            "default": "sites",
            "description": "Indicates the location. Only values of \"tenants\", \"sites\", \"buildings\", \"rooms\", \"racks\", \"devices\", \"room-templates\", \"obj-templates\" are acceptable For rooms, walls, acs, panels, aisles, tiles, cabinets, groups, corridors, racksensors, and devicesensors can be obtained by appending /subobj type and subobj id",
            "name": "objs",
            "in": "query",
            "required": true
          },
          {
            "type": "int",
            "default": 999,
            "description": "ID of desired object or Name of Tenant",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "If no new or any information is provided\nan OK will still be returned",
        "produces": [
          "application/json"
        ],
        "tags": [
          "objects"
        ],
        "summary": "Changes Object data in the system.",
        "operationId": "UpdateObject",
        "parameters": [
          {
            "type": "string",
            "default": "sites",
            "description": "Indicates the object. Only values of \"tenants\", \"sites\", \"buildings\", \"rooms\", \"racks\", \"devices\", \"room-templates\", \"obj-templates\" are acceptable. For rooms, walls, acs, panels, aisles, tiles, cabinets, groups, corridors, racksensors, and devicesensors can be obtained by appending /subobj type and subobj id",
            "name": "objs",
            "in": "query",
            "required": true
          },
          {
            "type": "int",
            "default": 999,
            "description": "ID of desired Object",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": "INFINITI",
            "description": "Name of Object",
            "name": "Name",
            "in": "query"
          },
          {
            "type": "string",
            "default": "Auto",
            "description": "Category of Object (ex. Consumer Electronics, Medical)",
            "name": "Category",
            "in": "query"
          },
          {
            "type": "string[]",
            "default": "High End Worldwide automotive company",
            "description": "Description of Object",
            "name": "Description",
            "in": "query"
          },
          {
            "type": "string",
            "default": "High End Auto",
            "description": "Domain of the Object",
            "name": "Domain"
          },
          {
            "type": "json",
            "description": "Any other object attributes can be updated",
            "name": "Attributes",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "objects"
        ],
        "summary": "Deletes an Object in the system.",
        "operationId": "DeleteObject",
        "parameters": [
          {
            "type": "string",
            "default": "sites",
            "description": "Indicates the object. Only values of \"tenants\", \"sites\", \"buildings\", \"rooms\", \"racks\", \"devices\", \"room-templates\", \"obj-templates\" are acceptable For rooms, walls, acs, panels, aisles, tiles, cabinets, groups, corridors, racksensors, and devicesensors can be obtained by appending /subobj type and subobj id",
            "name": "objs",
            "in": "query",
            "required": true
          },
          {
            "type": "int",
            "default": 999,
            "description": "ID of desired object",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/{objs}/{id}/*": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "objects"
        ],
        "summary": "A category of objects of a Parent Object can be retrieved from the system.",
        "operationId": "GetFromObect",
        "parameters": [
          {
            "type": "string",
            "default": "sites",
            "description": "Indicates the object. Only values of \"tenants\", \"sites\", \"buildings\", \"rooms\", \"racks\", \"devices\" are acceptable",
            "name": "objs",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "default": "INFINITI",
            "description": "ID of desired object",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "default": "/buildings/BuildingB/RoomA",
            "description": "Hierarchal path to desired object(s). For rooms it can additionally have \"acs\" or \"panels\" or \"walls\"",
            "name": "*",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/{objs}/{id}/all": {
      "get": {
        "description": "Returns JSON body with all subobjects under the Object",
        "produces": [
          "application/json"
        ],
        "tags": [
          "objects"
        ],
        "summary": "Obtain all objects related to specified object in the system.",
        "operationId": "GetFromObject",
        "parameters": [
          {
            "type": "string",
            "default": "sites",
            "description": "Indicates the object. Only values of \"tenants\", \"sites\", \"buildings\", \"rooms\", \"racks\", \"devices\" are acceptable",
            "name": "objs",
            "in": "query",
            "required": true
          },
          {
            "type": "int",
            "default": 999,
            "description": "ID of object",
            "name": "ID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          },
          "404": {
            "description": "Nothing Found"
          }
        }
      }
    },
    "/api/{objs}?": {
      "get": {
        "description": "Gets an Object using any attribute (with the exception of description)\nvia query in the system\nThe attributes are in the form {attr}=xyz\u0026{attr1}=abc\nAnd any combination can be used given that at least 1 is provided.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "objects"
        ],
        "operationId": "GetObject",
        "parameters": [
          {
            "type": "string",
            "default": "sites",
            "description": "Indicates the object. Only values of \"tenants\", \"sites\", \"buildings\", \"rooms\", \"racks\", \"devices\", \"room-templates\", \"obj-templates\", \"walls\",\"acs\",\"panels\", \"aisles\", \"tiles\", \"cabinets\", \"groups\", \"corridors\", \"racksensors\", and \"devicesensors\" are acceptable",
            "name": "objs",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "default": "INFINITI",
            "description": "Name of tenant",
            "name": "Name",
            "in": "query"
          },
          {
            "type": "string",
            "default": "Auto",
            "description": "Category of Tenant (ex. Consumer Electronics, Medical)",
            "name": "Category",
            "in": "query"
          },
          {
            "type": "string",
            "default": "High End Auto",
            "description": "Domain of the Tenant",
            "name": "Domain"
          },
          {
            "type": "json",
            "description": "Any other object attributes can be queried",
            "name": "Attributes",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "Found"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/{obj}": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "objects"
        ],
        "summary": "Creates an object in the system.",
        "operationId": "CreateObject",
        "parameters": [
          {
            "type": "string",
            "default": "sites",
            "description": "Indicates the Object. Only values of \"tenants\", \"sites\", \"buildings\", \"rooms\", \"racks\", \"devices\", \"acs\", \"panels\", \"walls\",\"aisles\", \"tiles\", \"cabinets\", \"groups\", \"corridors\", \"room-templates\", \"obj-templates\", \"racksensors\",\"devicesensors\" are acceptable",
            "name": "objs",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "default": "Object A",
            "description": "Name of object",
            "name": "Name",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "default": "Research",
            "description": "Category of Object (ex. Consumer Electronics, Medical)",
            "name": "Category",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "default": 999,
            "description": "Domain of Object",
            "name": "Domain",
            "required": true
          },
          {
            "type": "int",
            "default": 999,
            "description": "All objects are linked to a parent with the exception of Tenant since it has no parent",
            "name": "ParentID",
            "required": true
          },
          {
            "type": "string[]",
            "default": [
              "Some abandoned object in Grenoble"
            ],
            "description": "Description of Object",
            "name": "Description",
            "in": "query"
          },
          {
            "type": "json",
            "description": "Any other object attributes can be added. They are required depending on the obj type.",
            "name": "Attributes",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/{obj}/{id}/{subent}": {
      "get": {
        "description": "For Example: /api/tenants/{id}/buildings\nWill return all buildings of a tenant\nReturns JSON body with all subobjects under the Object",
        "produces": [
          "application/json"
        ],
        "tags": [
          "objects"
        ],
        "summary": "Obtain all objects 2 levels lower in the system.",
        "operationId": "GetFromObject",
        "parameters": [
          {
            "type": "string",
            "default": "tenants",
            "description": "Indicates the object. Only values of \"tenants\", \"sites\", \"buildings\", \"rooms\" are acceptable",
            "name": "obj",
            "in": "query",
            "required": true
          },
          {
            "type": "int",
            "default": 999,
            "description": "ID of object",
            "name": "ID",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "default": "buildings",
            "description": "Objects which 2 are levels lower in the hierarchy.",
            "name": "subent",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          },
          "404": {
            "description": "Nothing Found"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "JWT": {
      "type": "jwt",
      "name": "Authorization",
      "in": "header"
    }
  }
}